function MtrDatepicker(a) {
    function b(a) {
        return document.getElementById(a);
    }
    function c(a, b) {
        return a ? a.querySelector(b) : null;
    }
    function d(a, b) {
        return a && b ? b.offsetTop - a.offsetTop : 0;
    }
    function e(a) {
        var b;
        if (null == a || "object" != typeof a) return a;
        if (a instanceof Array) {
            b = [];
            for (var c = 0, d = a.length; c < d; c++) b[c] = e(a[c]);
            return b;
        }
        if (a instanceof Object) {
            b = {};
            for (var f in a) a.hasOwnProperty(f) && (b[f] = e(a[f]));
            return b;
        }
        throw new Error("Unable to copy obj! Its type isn't supported.");
    }
    function f(a, b) {
        a && (a.className.indexOf(b) > -1 || (a.className += " " + b));
    }
    function g(a, b) {
        a && a.className.indexOf(b) !== -1 && (a.className = a.className.replace(new RegExp(b, "g"), ""));
    }
    function h(a) {
        return Number(a) === a && a % 1 == 0;
    }
    function i(a) {
        for (var b = a.min, c = a.max, d = a.step, e = [], f = b; f <= c; f += d) e.push(f);
        return e;
    }
    function j(a, b) {
        for (var c, d = new Date(b, a, 1), e = new Date(b, a + 1, 0), f = {
            values: [],
            names: [],
            min: d.getDate(),
            max: e.getDate(),
            step: 1
        }, g = d.getDate(); g <= e.getDate(); g++) c = new Date(b, a, g), f.values.push(g), 
        f.names[g] = p.daysNames[c.getDay()];
        return f;
    }
    function k(a) {
        ga = a.touches[0].clientX, ha = a.touches[0].clientY;
    }
    function l(a, b) {
        if (ga && ha) {
            var c = a.touches[0].clientX, d = a.touches[0].clientY, e = ga - c, f = ha - d;
            Math.abs(e) > Math.abs(f) || b(f > 0 ? 1 : -1), ga = null, ha = null;
        }
    }
    function m(a, b) {
        var c = new XMLHttpRequest();
        c.overrideMimeType("application/json"), c.open("GET", a, !0), c.onreadystatechange = function() {
            4 == c.readyState && "200" == c.status && b(c.responseText);
        }, c.send(null);
    }
    function n() {
        var a = {
            isChrome: !1,
            isSafari: !1,
            isFirefox: !1
        };
        return navigator.userAgent.search("Safari") >= 0 && navigator.userAgent.search("Chrome") < 0 && (a.isSafari = !0), 
        a;
    }
    var o, p = {
        targetElement: null,
        defaultValues: {
            hours: [],
            minutes: [],
            dates: [],
            datesNames: [],
            months: [],
            years: []
        },
        hours: {
            min: 1,
            max: 12,
            step: 1,
            maxlength: 2
        },
        minutes: {
            min: 0,
            max: 50,
            step: 10,
            maxlength: 2
        },
        months: {
            min: 0,
            max: 11,
            step: 1,
            maxlength: 2
        },
        years: {
            min: 2e3,
            max: 2030,
            step: 1,
            maxlength: 4
        },
        animations: !0,
        smartHours: !1,
        future: !1,
        disableAmPm: !1,
        validateAfter: !0,
        utcTimezone: 0,
        transitionDelay: 100,
        transitionValidationDelay: 500,
        references: {
            hours: null
        },
        monthsNames: {
            0: "Jan",
            1: "Feb",
            2: "Mar",
            3: "Apr",
            4: "May",
            5: "Jun",
            6: "Jul",
            7: "Aug",
            8: "Sep",
            9: "Oct",
            10: "Nov",
            11: "Dec"
        },
        daysNames: {
            0: "Sun",
            1: "Mon",
            2: "Tue",
            3: "Wed",
            4: "Thu",
            5: "Fri",
            6: "Sat"
        },
        timezones: null
    }, q = {
        date: null,
        timestamp: null,
        ampm: !0
    }, r = null, s = {
        all: [],
        time: [],
        date: [],
        hour: [],
        minute: [],
        ampm: [],
        day: [],
        month: [],
        year: []
    }, t = {
        onChange: e(s),
        beforeChange: e(s),
        afterChange: e(s)
    }, u = {}, v = null, w = {}, x = function(a) {
        if (r = n(), !z(a)) return void console.error("Initialization of the datepicker is blocked because of erros in the config.");
        y(a), o = b(p.targetElement), B(), C(), A();
    }, y = function(a) {
        p.targetElement = a.target, p.animations = void 0 !== a.animations ? a.animations : p.animations, 
        p.future = void 0 !== a.future ? a.future : p.future, p.validateAfter = void 0 !== a.validateAfter ? a.validateAfter : p.validateAfter, 
        p.smartHours = void 0 !== a.smartHours ? a.smartHours : p.smartHours, p.disableAmPm = void 0 !== a.disableAmPm ? a.disableAmPm : p.disableAmPm, 
        p.disableAmPm && (p.hours.min = 0, p.hours.max = 23), q.date = a.timestamp ? new Date(a.timestamp) : new Date(), 
        q.date.setSeconds(0), void 0 !== a.utcTimezone ? (u.timezones = new MtrDatepickerTimezones(), 
        p.utcTimezone = u.timezones.getTimezone(a.utcTimezone)) : p.utcTimezone = {
            offset: void 0 !== a.utcTimezone ? a.utcTimezone : q.date.getTimezoneOffset() / 60 * -1
        };
        var b = q.date.getTime() + 60 * q.date.getTimezoneOffset() * 1e3, c = b + 60 * p.utcTimezone.offset * 60 * 1e3;
        q.date = new Date(c), q.timestamp = q.date.getTime(), void 0 !== a.utcTimezone && m("./dist/timezones.json", function(a) {
            p.timezones = JSON.parse(a);
        }), p.minutes.min = void 0 !== a.minutes && void 0 !== a.minutes.min ? parseInt(a.minutes.min) : p.minutes.min, 
        p.minutes.max = void 0 !== a.minutes && void 0 !== a.minutes.max ? parseInt(a.minutes.max) : p.minutes.max, 
        p.minutes.step = void 0 !== a.minutes && void 0 !== a.minutes.step ? parseInt(a.minutes.step) : p.minutes.step, 
        p.months.min = void 0 !== a.months && void 0 !== a.months.min ? parseInt(a.months.min) : p.months.min, 
        p.months.max = void 0 !== a.months && void 0 !== a.months.max ? parseInt(a.months.max) : p.months.max, 
        p.months.step = void 0 !== a.months && void 0 !== a.months.step ? parseInt(a.months.step) : p.months.step, 
        p.years.min = void 0 !== a.years && void 0 !== a.years.min ? parseInt(a.years.min) : p.years.min, 
        p.years.max = void 0 !== a.years && void 0 !== a.years.max ? parseInt(a.years.max) : p.years.max, 
        p.years.step = void 0 !== a.years && void 0 !== a.years.step ? parseInt(a.years.step) : p.years.step, 
        p.defaultValues.hours = i(p.hours), p.defaultValues.minutes = i(p.minutes), p.defaultValues.months = i(p.months), 
        p.defaultValues.years = i(p.years);
    }, z = function(a) {
        var c = !0;
        if (a.minutes && (void 0 === a.minutes.min || h(a.minutes.min) || (console.error("Invalid argument: minutes.min should be a number."), 
        c = !1), void 0 === a.minutes.max || h(a.minutes.max) || (console.error("Invalid argument: minutes.max should be a number."), 
        c = !1), void 0 === a.minutes.step || h(a.minutes.step) || (console.error("Invalid argument: minutes.step should be a number."), 
        c = !1), void 0 !== a.minutes.min && void 0 !== a.minutes.max && a.minutes.max < a.minutes.min && (console.error("Invalid argument: minutes.max should be larger than minutes.min."), 
        c = !1), void 0 !== a.minutes.min && void 0 !== a.minutes.max && void 0 !== a.minutes.step && a.minutes.step > a.minutes.max - a.minutes.min && (console.error("Invalid argument: minutes.step should be less than minutes.max-minutes.min."), 
        c = !1)), a.hours && (void 0 === a.hours.min || h(a.hours.min) || (console.error("Invalid argument: hours.min should be a number."), 
        c = !1), void 0 === a.hours.max || h(a.hours.max) || (console.error("Invalid argument: hours.max should be a number."), 
        c = !1), void 0 === a.hours.step || h(a.hours.step) || (console.error("Invalid argument: hours.step should be a number."), 
        c = !1), void 0 !== a.hours.min && void 0 !== a.hours.max && a.hours.max < a.hours.min && (console.error("Invalid argument: hours.max should be larger than hours.min."), 
        c = !1), void 0 !== a.hours.min && void 0 !== a.hours.max && void 0 !== a.hours.step && a.hours.step > a.hours.max - a.hours.min && (console.error("Invalid argument: hours.step should be less than hours.max-hours.min."), 
        c = !1)), a.dates && (void 0 === a.dates.min || h(a.dates.min) || (console.error("Invalid argument: dates.min should be a number."), 
        c = !1), void 0 === a.dates.max || h(a.dates.max) || (console.error("Invalid argument: dates.max should be a number."), 
        c = !1), void 0 === a.dates.step || h(a.dates.step) || (console.error("Invalid argument: dates.step should be a number."), 
        c = !1), void 0 !== a.dates.min && void 0 !== a.dates.max && a.dates.max < a.dates.min && (console.error("Invalid argument: dates.max should be larger than dates.min."), 
        c = !1), void 0 !== a.dates.min && void 0 !== a.dates.max && void 0 !== a.dates.step && a.dates.step > a.dates.max - a.dates.min && (console.error("Invalid argument: dates.step should be less than dates.max-dates.min."), 
        c = !1)), a.months && (void 0 === a.months.min || h(a.months.min) || (console.error("Invalid argument: months.min should be a number."), 
        c = !1), void 0 === a.months.max || h(a.months.max) || (console.error("Invalid argument: months.max should be a number."), 
        c = !1), void 0 === a.months.step || h(a.months.step) || (console.error("Invalid argument: months.step should be a number."), 
        c = !1), void 0 !== a.months.min && void 0 !== a.months.max && a.months.max < a.months.min && (console.error("Invalid argument: months.max should be larger than months.min."), 
        c = !1), void 0 !== a.months.min && void 0 !== a.months.max && void 0 !== a.months.step && a.months.step > a.months.max - a.months.min && (console.error("Invalid argument: months.step should be less than months.max-months.min."), 
        c = !1)), a.years && (void 0 === a.years.min || h(a.years.min) || (console.error("Invalid argument: years.min should be a number."), 
        c = !1), void 0 === a.years.max || h(a.years.max) || (console.error("Invalid argument: years.max should be a number."), 
        c = !1), void 0 === a.years.step || h(a.years.step) || (console.error("Invalid argument: years.step should be a number."), 
        c = !1), void 0 !== a.years.min && void 0 !== a.years.max && a.years.max < a.years.min && (console.error("Invalid argument: years.max should be larger than years.min."), 
        c = !1), void 0 !== a.years.min && void 0 !== a.years.max && void 0 !== a.years.step && a.years.step > a.years.max - a.years.min && (console.error("Invalid argument: years.step should be less than years.max-years.min."), 
        c = !1)), a.timestamp && a.future) {
            var d = new Date(a.timestamp), e = new Date();
            d.getTime() < e.getTime() && (console.error("Invalid argument: timestamp should be in the future if the future check is enabled."), 
            c = !1);
        }
        if (void 0 !== a.utcTimezone && "function" != typeof MtrDatepickerTimezones && (console.error("In order to use the timezones feature you should load the mtr-datepicker-timezones.min.js first."), 
        c = !1), !c) {
            for (o = b(a.target); o.firstChild; ) o.removeChild(o.firstChild);
            var g = document.createElement("div");
            f(g, "mtr-error-message"), g.appendChild(document.createTextNode("An error has occured during the initialization of the datepicker.")), 
            o.appendChild(g);
        }
        return c;
    }, A = function() {}, B = function(a, b) {
        a = void 0 !== a ? a : W(), b = void 0 !== b ? b : Y();
        var c = j(a, b);
        p.dates = {
            min: c.min,
            max: c.max,
            step: c.step,
            maxlength: 2
        }, p.defaultValues.dates = c.values, p.defaultValues.datesNames = c.names;
    }, C = function() {
        for (g(o, "mtr-datepicker"), f(o, "mtr-datepicker"); o.firstChild; ) o.removeChild(o.firstChild);
        var a, b = D({
            name: "hours",
            values: p.defaultValues.hours,
            value: M()
        }), c = D({
            name: "minutes",
            values: p.defaultValues.minutes,
            value: O()
        });
        p.disableAmPm || (a = E({
            name: "ampm"
        }));
        var d = document.createElement("div");
        d.className = "mtr-row";
        var e = document.createElement("div");
        e.className = "mtr-clearfix", d.appendChild(b), d.appendChild(c), p.disableAmPm || d.appendChild(a), 
        o.appendChild(d), o.appendChild(e);
        var h = D({
            name: "months",
            values: p.defaultValues.months,
            valuesNames: p.monthsNames,
            value: W()
        }), i = D({
            name: "dates",
            values: p.defaultValues.dates,
            valuesNames: p.defaultValues.datesNames,
            value: U()
        }), j = D({
            name: "years",
            values: p.defaultValues.years,
            value: Y()
        }), k = document.createElement("div");
        k.className = "mtr-row";
        var l = document.createElement("div");
        l.className = "mtr-clearfix", k.appendChild(h), k.appendChild(i), k.appendChild(j), 
        o.appendChild(k), o.appendChild(l), $(q.timestamp);
    }, D = function(a) {
        function b() {
            var b = document.createElement("div");
            return b.className = "mtr-arrow up", b.appendChild(document.createElement("span")), 
            b.addEventListener("click", function() {
                c(q, ".mtr-input");
                f(q, "arrow-click"), f(n, "mtr-active"), w[a.name] && window.clearTimeout(w[a.name]), 
                w[a.name] = setTimeout(function() {
                    g(q, "arrow-click"), g(n, "mtr-active");
                }, 1e3);
                var b, d = a.name;
                switch (d) {
                  case "hours":
                    b = M();
                    break;

                  case "minutes":
                    b = O();
                    break;

                  case "dates":
                    b = U();
                    break;

                  case "months":
                    b = W();
                    break;

                  case "years":
                    b = Y();
                }
                var e = p.defaultValues[d].indexOf(b);
                switch (e++, e >= p.defaultValues[d].length && (e = 0), d) {
                  case "hours":
                    var h = p.defaultValues[d][e];
                    !p.disableAmPm && S() && 12 !== h && (h += 12), L(h);
                    break;

                  case "minutes":
                    N(p.defaultValues[d][e]);
                    break;

                  case "dates":
                    T(p.defaultValues[d][e]);
                    break;

                  case "months":
                    V(p.defaultValues[d][e]);
                    break;

                  case "years":
                    X(p.defaultValues[d][e]);
                }
            }, !1), b;
        }
        function d() {
            var b = document.createElement("div");
            return b.className = "mtr-arrow down", b.appendChild(document.createElement("span")), 
            b.addEventListener("click", function(b) {
                c(q, ".mtr-input");
                f(q, "arrow-click"), f(n, "mtr-active"), w[a.name] && window.clearTimeout(w[a.name]), 
                w[a.name] = setTimeout(function() {
                    g(q, "arrow-click"), g(n, "mtr-active");
                }, 1e3);
                var d, e = a.name;
                switch (e) {
                  case "hours":
                    d = M();
                    break;

                  case "minutes":
                    d = O();
                    break;

                  case "dates":
                    d = U();
                    break;

                  case "months":
                    d = W();
                    break;

                  case "years":
                    d = Y();
                }
                var h = p.defaultValues[e].indexOf(d);
                switch (h--, h < 0 && (h = p.defaultValues[e].length - 1), e) {
                  case "hours":
                    var i = p.defaultValues[e][h];
                    !p.disableAmPm && S() && 12 !== i && (i += 12), L(i);
                    break;

                  case "minutes":
                    N(p.defaultValues[e][h]);
                    break;

                  case "dates":
                    T(p.defaultValues[e][h]);
                    break;

                  case "months":
                    V(p.defaultValues[e][h]);
                    break;

                  case "years":
                    X(p.defaultValues[e][h]);
                }
            }, !1), b;
        }
        function e() {
            var b = document.createElement("input");
            return b.value = a.value, b.type = "text", b.className = "mtr-input " + a.name, 
            b.style.display = "none", b.addEventListener("blur", function(c) {
                function d() {
                    if (o) {
                        var d = b.value, e = b.getAttribute("data-old-value");
                        if (c.target.className.indexOf("arrow-click") > -1) return void g(c.target, "arrow-click");
                        if (b.className.indexOf("months") > -1 && d--, I(a.name, d) === !1) return b.value = e, 
                        void b.focus();
                        var f = a.name.substring(0, a.name.length - 1);
                        if ("dates" === a.name && (f = "day"), p.future && !J(f, d, e)) return "months" === a.name && e++, 
                        b.value = e, void b.focus();
                        switch (b.style.display = "none", a.name) {
                          case "hours":
                            L(d);
                            break;

                          case "minutes":
                            N(d);
                            break;

                          case "dates":
                            T(d);
                            break;

                          case "months":
                            V(d);
                            break;

                          case "years":
                            X(d);
                        }
                    }
                }
                setTimeout(function() {
                    d();
                }, 500);
            }, !1), b.addEventListener("wheel ", function(c) {
                c.preventDefault(), c.stopPropagation();
                var d, e = (c.target, c.wheelDeltaY ? c.wheelDeltaY : c.deltaY, parseInt(b.value)), f = p[a.name].min, g = p[a.name].max, h = p[a.name].step;
                return "months" === a.name && (f++, g++), d = direction > 0 ? e < g ? e + h : f : e > f ? e - h : g, 
                b.value = d, !1;
            }, !1), b;
        }
        function h(b) {
            var d = F(a);
            return d.addEventListener("touchstart", function(a) {
                k(a);
            }, !1), d.addEventListener("touchmove", function(a) {
                l(a, function(a) {
                    var b, e = d.parentElement.parentElement;
                    b = a > 0 ? c(e, ".mtr-arrow.up") : c(e, ".mtr-arrow.down"), b.click();
                });
            }, !1), d;
        }
        var i = document.createElement("div");
        i.className = "mtr-input-slider", p.references[a.name] = p.targetElement + "-input-" + a.name, 
        i.id = p.references[a.name];
        var j = b(), m = d(), n = document.createElement("div");
        n.className = "mtr-content";
        var q = e(), r = h(q);
        return i.appendChild(j), n.appendChild(q), n.appendChild(r), i.appendChild(n), i.appendChild(m), 
        i;
    }, E = function(a) {
        function b(a, b, c) {
            var d = document.createElement("div"), e = document.createElement("label"), f = document.createElement("input"), g = p.targetElement + "-radio-" + a + "-" + c, h = document.createElement("span");
            h.className = "value", h.appendChild(document.createTextNode(c));
            var i = document.createElement("span");
            return i.className = "radio", e.setAttribute("for", g), e.appendChild(h), e.appendChild(i), 
            f.className = "mtr-input ", f.type = "radio", f.name = a, f.id = g, f.value = b, 
            d.appendChild(f), d.appendChild(e), f.addEventListener("change", function(a) {
                if (!P(b) && p.future) return P(!b), a.preventDefault(), a.stopPropagation(), !1;
            }, !1), d;
        }
        var c = document.createElement("div");
        c.className = "mtr-input-radio", p.references[a.name] = p.targetElement + "-input-" + a.name, 
        c.id = p.references[a.name];
        var d = document.createElement("form");
        d.name = p.references[a.name];
        var e = b("ampm", 1, "AM"), f = b("ampm", 0, "PM");
        return d.appendChild(e), d.appendChild(f), d.ampm.value = R() ? "1" : "0", c.appendChild(d), 
        c;
    }, F = function(a) {
        var b = document.createElement("div");
        b.className = "mtr-values", a.values.forEach(function(c) {
            var d = "months" === a.name ? c + 1 : c, e = document.createElement("div");
            e.className = "mtr-default-value-holder", e.setAttribute("data-value", c);
            var f = document.createElement("div");
            if (f.className = "mtr-default-value", f.setAttribute("data-value", c), "minutes" === a.name && 0 === c ? f.appendChild(document.createTextNode("00")) : f.appendChild(document.createTextNode(d)), 
            e.appendChild(f), a.valuesNames) {
                var g = document.createElement("div");
                g.className = "mtr-default-value-name", g.appendChild(document.createTextNode(a.valuesNames[c])), 
                f.className += " has-name", e.appendChild(g);
            }
            b.appendChild(e);
        });
        var d = function() {
            var a = b.parentElement, d = c(a, ".mtr-input");
            d.className.indexOf("months") > -1 && (d.value = parseInt(d.value) + 1), d.style.display = "block", 
            d.focus();
        };
        return b.addEventListener("click", d, !1), b.addEventListener("touchstart", d, !1), 
        b.addEventListener("touchend", d, !1), b.addEventListener("wheel", function(a) {
            if (a.preventDefault(), a.stopPropagation(), v) return !1;
            var b, d = a.target, e = d.parentElement.parentElement.parentElement.parentElement, f = (c(e, ".mtr-values"), 
            c(e, ".mtr-input"), a.wheelDeltaY ? a.wheelDeltaY : a.deltaY * -1);
            return b = f > 0 ? c(e, ".mtr-arrow.up") : c(e, ".mtr-arrow.down"), v = setTimeout(function() {
                K();
            }, 100), b.click(), !1;
        }, !1), b.addEventListener("touchstart", function(a) {
            return a.preventDefault(), a.stopPropagation(), !1;
        }, !1), b.addEventListener("touchmove", function(a) {
            return a.preventDefault(), a.stopPropagation(), !1;
        }, !1), b;
    }, G = function(a, d) {
        var e = b(a), f = c(e, ".mtr-content"), g = c(f, ".mtr-values");
        g.parentNode.removeChild(g);
        var h = F({
            name: d.name,
            values: d.values,
            valuesNames: d.valuesNames
        });
        f.appendChild(h);
    }, H = function(a, b) {
        a = void 0 !== a ? a : W(), b = void 0 !== b ? b : Y(), B(a, b), G(p.references.dates, {
            name: "dates",
            values: p.defaultValues.dates,
            valuesNames: p.defaultValues.datesNames
        });
        var c = p.defaultValues.dates[p.defaultValues.dates.length - 1];
        U() > c && T(c);
    }, I = function(a, b) {
        return b = parseInt(b), p.defaultValues[a].indexOf(b) > -1;
    }, J = function(a, b, c) {
        if (p.future === !1) return !0;
        var d = new Date(), e = new Date(q.date.getTime());
        switch (a) {
          case "hour":
            R() && 12 === b && (b = 0), e.setHours(b);
            break;

          case "minute":
            e.setMinutes(b);
            break;

          case "ampm":
            var f = e.getHours(), g = f;
            b != c && (1 == b && f > 12 ? g = f - 12 : 1 == b && 12 == f ? g = 0 : 0 == b && f < 12 ? g = f + 12 : 0 == b && 12 == f && (g = 12)), 
            e.setHours(g);
            break;

          case "day":
            e.setDate(b);
            break;

          case "month":
            e.setMonth(b);
            break;

          case "year":
            e.setFullYear(b);
        }
        return d.setSeconds(0), d.setMilliseconds(0), e.setSeconds(0), e.setMilliseconds(0), 
        !(e.getTime() < d.getTime());
    }, K = function() {
        v = null;
    }, L = function(a, b) {
        var c = q.date.getHours(), d = J("hour", a, c), e = R();
        if (!p.disableAmPm && p.smartHours && 12 === a && e && (d = !0), !p.validateAfter && !d) return void ba(p.references.hours);
        da("hour", "beforeChange", a, c);
        var f = a;
        !p.disableAmPm && a > 12 && (a -= 12), aa(p.references.hours, a, b), p.validateAfter && !d ? (ba(p.references.hours), 
        setTimeout(function() {
            !p.disableAmPm && c > 12 && (c -= 12), aa(p.references.hours, c, b), da("hour", "onChange", a, c), 
            da("hour", "afterChange", a, c);
        }, p.transitionValidationDelay)) : (q.timestamp = q.date.setHours(f), !p.disableAmPm && p.smartHours && 12 === f && e ? (q.timestamp = q.date.setHours(12), 
        P(!1)) : p.disableAmPm || !p.smartHours || 23 !== f && 11 !== f || 12 !== c || e ? p.disableAmPm || p.smartHours || 12 !== f || !e ? q.timestamp = q.date.setHours(f) : q.timestamp = q.date.setHours(0) : (f = 11, 
        q.timestamp = q.date.setHours(f), P(!0)), !p.disableAmPm && f > 12 && (f -= 12, 
        P(!1)), da("hour", "onChange", a, c), da("hour", "afterChange", a, c));
    }, M = function() {
        var a = q.date.getHours();
        if (p.disableAmPm) return a;
        var b = R();
        return 12 === a || 0 === a ? 12 : a < 12 && b ? a : a - 12;
    }, N = function(a, b) {
        var c = q.date.getMinutes(), d = J("minute", a, c);
        if (!p.validateAfter && !d) return void ba(p.references.minutes);
        da("minute", "beforeChange", a, c);
        p.defaultValues.minutes;
        aa(p.references.minutes, a, b), p.validateAfter && !d ? (ba(p.references.minutes), 
        setTimeout(function() {
            aa(p.references.minutes, c, b), da("minute", "onChange", a, c), da("minute", "afterChange", a, c);
        }, p.transitionValidationDelay)) : (q.timestamp = q.date.setMinutes(a), da("minute", "onChange", a, c), 
        da("minute", "afterChange", a, c));
    }, O = function() {
        return q.date.getMinutes();
    }, P = function(a) {
        if (!p.disableAmPm) {
            var b = R();
            if (!J("ampm", a, b)) return ca(p.references.ampm, a), r.isSafari && setTimeout(function() {
                Q(p.references.ampm, b);
            }, 10), !1;
            da("ampm", "beforeChange", a, b);
            var c = q.date.getHours();
            M();
            return R() !== a && (1 == a && c >= 12 ? (c -= 12, q.timestamp = q.date.setHours(c)) : 0 == a && c < 12 && (c += 12, 
            q.timestamp = q.date.setHours(c))), q.ampm = a, Q(p.references.ampm, a), da("ampm", "onChange", a, b), 
            da("ampm", "afterChange", a, b), !0;
        }
    }, Q = function(a, d) {
        if (!p.disableAmPm) {
            var e = b(a), f = c(e, "form");
            f.ampm.value = d ? "1" : "0";
            var g = d ? "AM" : "PM", h = c(f, 'input.mtr-input[type="radio"][value="1"]'), i = c(f, 'input.mtr-input[type="radio"][value="0"]'), j = c(f, 'label[for="' + p.targetElement + "-radio-ampm-" + g + '"]');
            c(j, "checkbox");
            d ? (h.setAttribute("checked", ""), h.checked = !0, i.removeAttribute("checked")) : (i.setAttribute("checked", ""), 
            i.checked = !0, h.removeAttribute("checked"));
        }
    }, R = function() {
        var a = q.date.getHours();
        return a >= 0 && a <= 11;
    }, S = function() {
        return !R();
    }, T = function(a, b) {
        var c = q.date.getDate(), d = J("day", a, c);
        if (!p.validateAfter && !d) return void ba(p.references.dates);
        da("day", "beforeChange", a, c), aa(p.references.dates, a, b), p.validateAfter && !d ? (ba(p.references.dates), 
        setTimeout(function() {
            aa(p.references.dates, c, b), da("day", "onChange", a, c), da("day", "afterChange", a, c);
        }, p.transitionValidationDelay)) : (q.timestamp = q.date.setDate(a), da("day", "onChange", a, c), 
        da("day", "afterChange", a, c));
    }, U = function() {
        return q.date.getDate();
    }, V = function(a, b) {
        var c = q.date.getMonth(), d = J("month", a, c);
        if (!p.validateAfter && !d) return void ba(p.references.months);
        da("month", "beforeChange", a, c), aa(p.references.months, a, b), p.validateAfter && !d ? (ba(p.references.months), 
        setTimeout(function() {
            aa(p.references.months, c, b), da("month", "onChange", a, c), da("month", "afterChange", a, c);
        }, p.transitionValidationDelay)) : (q.timestamp = q.date.setMonth(a), H(a), da("month", "onChange", a, c), 
        da("month", "afterChange", a, c));
    }, W = function() {
        return q.date.getMonth();
    }, X = function(a, b) {
        var c = q.date.getFullYear(), d = J("year", a, c);
        if (!p.validateAfter && !d) return void ba(p.references.years);
        da("year", "beforeChange", a, c), H(void 0, a), aa(p.references.years, a, b), p.validateAfter && !d ? (ba(p.references.years), 
        setTimeout(function() {
            aa(p.references.years, c, b), da("year", "onChange", a, c), da("year", "afterChange", a, c);
        }, p.transitionValidationDelay)) : (q.timestamp = q.date.setFullYear(a), da("year", "onChange", a, c), 
        da("year", "afterChange", a, c));
    }, Y = function() {
        return q.date.getFullYear();
    }, Z = function() {
        return M() + ":" + O() + " " + (R() ? "AM" : "PM");
    }, $ = function(a) {
        var b = fa(a);
        q.date = new Date(b), q.timestamp = b;
        var c = q.date.getHours(), d = O(), e = c >= 0 && c < 12, f = U(), g = W(), h = Y();
        c = 0 === c ? 12 : c, L(c), N(d), V(g), X(h), T(f), P(e);
    }, _ = function() {
        return q.date.getTime();
    }, aa = function(a, e, f) {
        var g = b(a);
        if (f = f || !1, g) {
            var h = c(g, ".mtr-content"), i = c(g, '.mtr-values .mtr-default-value[data-value="' + e + '"]'), j = c(g, ".mtr-arrow.up"), k = c(g, ".mtr-input");
            scrollTo = d(h, i) + j.clientHeight, k.value = e, k.setAttribute("data-old-value", e), 
            p.animations === !1 || f ? i.scrollIntoView() : ea(h, scrollTo, p.transitionDelay);
        }
    }, ba = function(a) {
        var d = b(a), e = c(d, ".mtr-content");
        f(e, "mtr-error"), setTimeout(function() {
            g(e, "mtr-error");
        }, p.transitionValidationDelay + 300);
    }, ca = function(a, d) {
        "boolean" == typeof d && (d = d === !0 ? 1 : 0);
        var e = b(a), h = c(e, '.mtr-input[value="' + d + '"]');
        f(h, "mtr-error"), setTimeout(function() {
            g(h, "mtr-error");
        }, p.transitionValidationDelay + 300);
    }, da = function(a, b, c, d) {
        var e = function(b) {
            b(a, c, d);
        };
        switch (t[b][a].forEach(function(a) {
            e(a);
        }), t[b].all.forEach(function(a) {
            e(a);
        }), a) {
          case "hour":
          case "minute":
          case "ampm":
            t[b].time.forEach(function(a) {
                e(a);
            });
            break;

          case "day":
          case "month":
          case "year":
            t[b].date.forEach(function(a) {
                e(a);
            });
        }
    }, ea = function(a, b, c) {
        if (b = Math.round(b), !((c = Math.round(c)) < 0)) {
            if (0 === c) return void (a.scrollTop = b);
            var d = Date.now(), e = d + c, f = a.scrollTop, g = b - f, h = function(a, b, c) {
                if (c <= a) return 0;
                if (c >= b) return 1;
                var d = (c - a) / (b - a);
                return d * d * (3 - 2 * d);
            }, i = a.scrollTop, j = function() {
                if (a.scrollTop == i) {
                    var b = Date.now(), c = h(d, e, b), k = Math.round(f + g * c);
                    a.scrollTop = k, b >= e || a.scrollTop === i && a.scrollTop !== k || (i = a.scrollTop, 
                    setTimeout(function() {
                        j();
                    }, 0));
                }
            };
            setTimeout(function() {
                j();
            }, 0);
        }
    }, fa = function(a) {
        var b = 60 * p.minutes.step * 1e3, c = 0;
        return p.minutes.step > 1 && (c = (b - a % b) % a), a + c;
    }, ga = null, ha = null, ia = function() {
        return q.date.toDateString();
    }, ja = function() {
        return q.date.toGMTString();
    }, ka = function() {
        return q.date.toISOString();
    }, la = function() {
        return q.date.toLocaleDateString();
    }, ma = function() {
        return q.date.toLocaleString();
    }, na = function() {
        return q.date.toLocaleTimeString();
    }, oa = function() {
        return p.timezones ? ia() + " " + pa() : q.date.toString();
    }, pa = function() {
        if (u.timezones) {
            var a = "";
            return a += q.date.toTimeString().split(" ")[0], a += " GMT" + (p.utcTimezone.offset > 0 ? "+" : "") + (Math.abs(p.utcTimezone.offset) < 10 ? "0" : "") + p.utcTimezone.offset + "00", 
            a += " (" + p.utcTimezone.abbr + ")";
        }
        return q.date.toTimeString();
    }, qa = function() {
        return q.date.toUTCString();
    }, ra = function(a) {
        function b(a, b, c) {
            var d = "#%#", e = new RegExp(b + "(?!" + d + ")", "g");
            return a = a.replace(e, c + d);
        }
        function c(a) {
            return a <= 9 ? "0" + a : a;
        }
        function d(a, b) {
            return p.disableAmPm ? a : 12 === a ? b ? 0 : 12 : b ? a : a + 12;
        }
        var e = M(), f = O(), g = R(), h = U(), i = W() + 1, j = Y();
        return a = b(a, "DD", c(h)), a = b(a, "D", h), a = b(a, "YYYY", j), a = b(a, "YY", j.toString().substr(2)), 
        a = b(a, "Y", j), a = b(a, "HH", c(d(e, g))), a = b(a, "hh", c(e)), a = b(a, "H", d(e, g)), 
        a = b(a, "h", e), a = b(a, "mm", c(f)), a = b(a, "m", O()), a = b(a, "a", g ? "am" : "pm"), 
        a = b(a, "A", g ? "AM" : "PM"), a = b(a, "MMM", p.monthsNames[i - 1]), a = b(a, "MM", c(i)), 
        a = b(a, "M", i), a = a.split("#%#").join("");
    }, sa = function(a, b) {
        t.onChange[a].push(b);
    }, ta = function(a, b) {
        t.beforeChange[a].push(b);
    }, ua = function(a, b) {
        t.afterChange[a].push(b);
    };
    this.init = x, this.setConfig = y, this.getFullTime = Z, this.getTimestamp = _, 
    this.setHours = L, this.setMinutes = N, this.setAmPm = P, this.setDate = T, this.setMonth = V, 
    this.setYear = X, this.setTimestamp = $, this.values = q, this.toDateString = ia, 
    this.toGMTString = ja, this.toISOString = ka, this.toLocaleDateString = la, this.toLocaleString = ma, 
    this.toLocaleTimeString = na, this.toString = oa, this.toTimeString = pa, this.toUTCString = qa, 
    this.format = ra, this.onChange = sa, this.beforeChange = ta, this.afterChange = ua, 
    x(a);
}